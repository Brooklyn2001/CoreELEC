diff -Naurp HTTPAceProxy-3ded24a/aceconfig.py HTTPAceProxy-3ded24a-patch/aceconfig.py
--- HTTPAceProxy-3ded24a/aceconfig.py	2018-09-13 14:22:56.000000000 +0300
+++ HTTPAceProxy-3ded24a-patch/aceconfig.py	2018-09-14 10:01:25.000000000 +0300
@@ -29,7 +29,7 @@ class AceConfig(acedefconfig.AceDefConfi
     # On Windows Ace Engine refreshes acestream.port file only after loading GUI
     # Loading takes about ~10-15 seconds and we need to wait before taking port out of it
     # Set this to 0 if you don't use proxy at startup or don't need to wait
-    acestartuptimeout = 10
+    acestartuptimeout = 8
     # Ace Stream Engine connection timeout
     aceconntimeout = 5
     # Ace Stream Engine authentication result & API port answers timeout
@@ -63,7 +63,7 @@ class AceConfig(acedefconfig.AceDefConfi
     # 'auto' - autodetect
     # '' or '0.0.0.0' - listen on all addresses
     # Or change to whatever IP you want to listen on this IP only
-    httphost = 'auto'
+    httphost = '0.0.0.0'
     # HTTP Server port
     httpport = 8000
     # If started as root, drop privileges to this user.
@@ -106,7 +106,7 @@ class AceConfig(acedefconfig.AceDefConfi
     # Logging configuration
     #
     # Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
-    loglevel = logging.DEBUG
+    loglevel = logging.INFO
     # Log message format
     logfmt = '%(filename)-20s [LINE:%(lineno)-4s]# %(levelname)-8s [%(asctime)s] %(message)s'
     #logfmt = '%(filename)s - %(name)s - %(threadName)s - [LINE:%(lineno)s]# - %(levelname)s - [%(asctime)s] - %(message)s' # for debug
@@ -115,7 +115,7 @@ class AceConfig(acedefconfig.AceDefConfi
     logdatefmt = '%d.%m %H:%M:%S'
     # Full path to a log file
     # For Windows OS something like that logfile = "c:\\Python27\\log_AceHttp.txt"
-    logfile = None
+    logfile = '/var/log/aceproxy.log'
     #
     # This method is used to detect fake requests. Some players send such
     # requests in order to detect the MIME type and/or check the stream availability.
diff -Naurp HTTPAceProxy-3ded24a/acedefconfig.py HTTPAceProxy-3ded24a-patch/acedefconfig.py
--- HTTPAceProxy-3ded24a/acedefconfig.py	2018-09-13 14:22:56.000000000 +0300
+++ HTTPAceProxy-3ded24a-patch/acedefconfig.py	2018-09-14 09:54:43.000000000 +0300
@@ -3,7 +3,7 @@ AceProxy default configuration script
 DO NOT EDIT THIS FILE!
 Copy this file to aceconfig.py and change only needed options.
 '''
-import logging, colorer
+import logging
 import platform
 from aceclient.acemessages import AceConst
 
diff -Naurp HTTPAceProxy-3ded24a/acehttp.py HTTPAceProxy-3ded24a-patch/acehttp.py
--- HTTPAceProxy-3ded24a/acehttp.py	2018-09-13 14:22:56.000000000 +0300
+++ HTTPAceProxy-3ded24a-patch/acehttp.py	2018-09-14 10:00:59.000000000 +0300
@@ -1,4 +1,4 @@
-#!/usr/bin/python3
+#!/usr/bin/python
 # -*- coding: utf-8 -*-
 '''
 
@@ -478,21 +478,15 @@ except AttributeError: pass  # not avail
 AceStuff.clientcounter = ClientCounter()
 
 #### AceEngine startup
-AceStuff.ace = findProcess('ace_engine.exe' if AceConfig.osplatform == 'Windows' else os.path.basename(AceConfig.acecmd))
-if not AceStuff.ace and AceConfig.acespawn:
-   AceStuff.acecmd = '' if AceConfig.osplatform == 'Windows' else AceConfig.acecmd.split()
-   if spawnAce(AceStuff.acecmd, AceConfig.acestartuptimeout):
-       logger.info('Local AceStream engine spawned with pid %s' % AceStuff.ace.pid)
-elif AceStuff.ace:
+AceStuff.ace = findProcess('acestream.start')
+if AceStuff.ace:
    AceStuff.ace = psutil.Process(AceStuff.ace)
    logger.info('Local AceStream engine found with pid %s' % AceStuff.ace.pid)
 
 # If AceEngine started (found) localy
 if AceStuff.ace:
     AceConfig.ace['aceHostIP'] = '127.0.0.1'
-    # Refreshes the acestream.port file for OS Windows.....
-    if AceConfig.osplatform == 'Windows': detectPort()
-    else: gevent.sleep(AceConfig.acestartuptimeout)
+    gevent.sleep(AceConfig.acestartuptimeout)
 else: logger.info('Remote AceStream engine will be used on %s:%s' % (AceConfig.ace['aceHostIP'], AceConfig.ace['aceAPIport']))
 
 # Loading plugins
