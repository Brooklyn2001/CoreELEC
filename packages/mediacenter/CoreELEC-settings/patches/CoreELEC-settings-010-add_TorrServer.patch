diff -Naurp CoreELEC-settings-f2c1df2/language/English/strings.po CoreELEC-settings-f2c1df2-patch/language/English/strings.po
--- CoreELEC-settings-f2c1df2/language/English/strings.po	2018-08-15 12:55:40.000000000 +0300
+++ CoreELEC-settings-f2c1df2-patch/language/English/strings.po	2018-08-15 13:47:51.000000000 +0300
@@ -956,6 +956,28 @@ msgctxt "#3475"
 msgid "Choose a directory to store cache Noxbit."
 msgstr ""
 
+########## TORRSERVER #########
+
+msgctxt "#34080"
+msgid "TorrServer Daemon"
+msgstr ""
+
+msgctxt "#3481"
+msgid "TorrServer: torrent to http server."
+msgstr ""
+
+msgctxt "#34082"
+msgid "Port"
+msgstr ""
+
+msgctxt "#3482"
+msgid "TorrServer port number (default: 8090)."
+msgstr ""
+
+msgctxt "#3483"
+msgid "Enable debugging TorrServer."
+msgstr ""
+
 ########## TTV-LIST #########
 
 msgctxt "#34050"
diff -Naurp CoreELEC-settings-f2c1df2/src/defaults.py CoreELEC-settings-f2c1df2-patch/src/defaults.py
--- CoreELEC-settings-f2c1df2/src/defaults.py	2018-08-15 12:55:40.000000000 +0300
+++ CoreELEC-settings-f2c1df2-patch/src/defaults.py	2018-08-15 13:02:56.000000000 +0300
@@ -39,7 +39,7 @@ bluetooth = {
     }
 
 ################################################################################
-# AceStream & Noxbit Module
+# AceStream, Noxbit, TorrServer Module
 ################################################################################
 
 ace = {
@@ -52,6 +52,10 @@ ace = {
     'D_NOX_PAS'  : '',
     'D_NOX_DEL'  : '0',
     'D_NOX_DIR'  : '/tmp/noxbit',
+    #TORRSERVER
+    'D_TORRSRV_PORT'  : '8090',
+    'D_TORRSRV_DEBUG' : '0',
+    'TORRSRV_GET_SRC' : "%s/torrsrv-get.sh" % SCRIPT_DIR(),
     }
 
 aceplist = {
@@ -181,6 +185,7 @@ _services = {
     'iptables': ['iptables.service'],
     'acestream': ['acestream.service'],
     'noxbit': ['noxbit.service'],
+    'torrserver': ['torrserver.service'],
     'oscam': ['oscam.service'],
     'tvheadend': ['tvheadend.service'],
     'transmission': ['transmission.service'],
diff -Naurp CoreELEC-settings-f2c1df2/src/resources/bin/torrsrv-get.sh CoreELEC-settings-f2c1df2-patch/src/resources/bin/torrsrv-get.sh
--- CoreELEC-settings-f2c1df2/src/resources/bin/torrsrv-get.sh	1970-01-01 03:00:00.000000000 +0300
+++ CoreELEC-settings-f2c1df2-patch/src/resources/bin/torrsrv-get.sh	2018-08-15 13:37:27.000000000 +0300
@@ -0,0 +1,27 @@
+#!/bin/sh
+
+# SPDX-License-Identifier: GPL-2.0-or-later
+# Copyright (C) 2011-present Alex@ELEC (http://alexelec.in.ua)
+
+TORRSRV_VER="TorrServer-linux-arm7"
+URL_MAIN="https://github.com/AlexELEC/TorrServer/raw/master"
+
+TORRSRV_DIR="/storage/.config/torrserver"
+TORRSRV_BIN="$TORRSRV_DIR/bin/TorrServer"
+TEMP_DIR="/storage/.kodi/temp"
+
+################################ MAIN ##########################################
+
+# download URL
+  if [ "$1" == "url" ] ; then
+      echo "$URL_MAIN/$TORRSRV_VER"
+
+# unpack
+  elif [ "$1" == "install" ] ; then
+      mkdir -p $TORRSRV_DIR
+      mkdir -p $TORRSRV_DIR/bin
+      mv -f $TEMP_DIR/$TORRSRV_VER $TORRSRV_BIN
+      chmod +x $TORRSRV_BIN
+  fi
+
+exit 0
diff -Naurp CoreELEC-settings-f2c1df2/src/resources/lib/modules/ace.py CoreELEC-settings-f2c1df2-patch/src/resources/lib/modules/ace.py
--- CoreELEC-settings-f2c1df2/src/resources/lib/modules/ace.py	2018-08-15 12:55:40.000000000 +0300
+++ CoreELEC-settings-f2c1df2-patch/src/resources/lib/modules/ace.py	2018-08-15 14:10:23.000000000 +0300
@@ -18,6 +18,9 @@ class ace:
     D_NOX_PAS = None
     D_NOX_DEL = None
     D_NOX_DIR = None
+    D_TORRSRV_PORT = None
+    D_TORRSRV_DEBUG = None
+    TORRSRV_GET_SRC = None
 
     menu = {'91': {
         'name': 34000,
@@ -120,6 +123,45 @@ class ace:
                             },
                         },
                     },
+                'torrserver': {
+                    'order': 3,
+                    'name': 34080,
+                    'not_supported': [],
+                    'settings': {
+                        'enable_torrserver': {
+                            'order': 1,
+                            'name': 34011,
+                            'value': None,
+                            'action': 'initialize_torrserver',
+                            'type': 'bool',
+                            'InfoText': 3481,
+                            },
+                        'torrsrv_port': {
+                            'order': 2,
+                            'name': 34082,
+                            'value': None,
+                            'action': 'initialize_torrserver',
+                            'type': 'num',
+                            'parent': {
+                                'entry': 'enable_torrserver',
+                                'value': ['1']
+                                },
+                            'InfoText': 3482,
+                            },
+                        'torrsrv_debug': {
+                            'order': 3,
+                            'name': 34012,
+                            'value': None,
+                            'action': 'initialize_torrserver',
+                            'type': 'bool',
+                            'parent': {
+                                'entry': 'enable_torrserver',
+                                'value': ['1']
+                                },
+                            'InfoText': 3483,
+                            },
+                        },
+                    },
             }
 
             self.oe = oeMain
@@ -133,6 +175,7 @@ class ace:
             self.load_values()
             self.initialize_acestream()
             self.initialize_noxbit()
+            self.initialize_torrserver()
             self.oe.dbg_log('ace::start_service', 'exit_function', 0)
         except Exception, e:
             self.oe.dbg_log('ace::start_service', 'ERROR: (%s)' % repr(e))
@@ -195,6 +238,16 @@ class ace:
             self.struct['noxbit']['settings']['nox_dir']['value'] = \
             self.oe.get_service_option('noxbit', 'NOX_DIR', self.D_NOX_DIR).replace('"', '')
 
+            #TORRSERVER
+            self.struct['torrserver']['settings']['enable_torrserver']['value'] = \
+                    self.oe.get_service_state('torrserver')
+
+            self.struct['torrserver']['settings']['torrsrv_port']['value'] = \
+            self.oe.get_service_option('torrserver', 'TORRSRV_PORT', self.D_TORRSRV_PORT).replace('"', '')
+
+            self.struct['torrserver']['settings']['torrsrv_debug']['value'] = \
+            self.oe.get_service_option('torrserver', 'TORRSRV_DEBUG', self.D_TORRSRV_DEBUG).replace('"', '')
+
             self.oe.dbg_log('ace::load_values', 'exit_function', 0)
         except Exception, e:
             self.oe.dbg_log('ace::load_values', 'ERROR: (%s)' % repr(e))
@@ -271,6 +324,58 @@ class ace:
             self.oe.set_busy(0)
             self.oe.dbg_log('ace::initialize_noxbit', 'ERROR: (%s)' % repr(e), 4)
 
+    def initialize_torrserver(self, **kwargs):
+        try:
+            self.oe.dbg_log('ace::initialize_torrserver', 'enter_function', 0)
+            self.oe.set_busy(1)
+            if 'listItem' in kwargs:
+                self.set_value(kwargs['listItem'])
+            options = {}
+            state = 0
+            if self.struct['torrserver']['settings']['enable_torrserver']['value'] == '1':
+
+                if not os.path.exists('/storage/.config/torrserver/bin/TorrServer'):
+                    torrsrv_status = self.get_torrsrv_source()
+                    if torrsrv_status == 'OK':
+                        self.oe.notify(self.oe._(32363), 'Run TorrServer daemon...')
+                    else:
+                        self.struct['torrserver']['settings']['enable_torrserver']['value'] = '0'
+                        self.oe.set_busy(0)
+                        xbmcDialog = xbmcgui.Dialog()
+                        answer = xbmcDialog.ok('Install TorrServer',
+                            'Error: The program is not installed, try again.')
+                        return
+
+                options['TORRSRV_DEBUG'] = '"%s"' % self.struct['torrserver']['settings']['torrsrv_debug']['value']
+                options['TORRSRV_PORT'] = '"%s"' % self.struct['torrserver']['settings']['torrsrv_port']['value']
+                state = 1
+
+            self.oe.set_service('torrserver', options, state)
+            self.oe.set_busy(0)
+            self.oe.dbg_log('ace::initialize_torrserver', 'exit_function', 0)
+        except Exception, e:
+            self.oe.set_busy(0)
+            self.oe.dbg_log('ace::initialize_torrserver', 'ERROR: (%s)' % repr(e), 4)
+
+    def get_torrsrv_source(self, listItem=None, silent=False):
+        try:
+            self.oe.dbg_log('ace::get_torrsrv_source', 'enter_function', 0)
+            torrsrv_url = self.oe.execute(self.TORRSRV_GET_SRC + ' url', 1).strip()
+            self.download_file = torrsrv_url
+            self.oe.set_busy(0)
+            if hasattr(self, 'download_file'):
+                downloaded = self.oe.download_file(self.download_file, self.oe.TEMP + self.download_file.split('/')[-1], silent)
+                if not downloaded is None:
+                    self.oe.notify(self.oe._(32363), 'Install TorrServer...')
+                    self.oe.set_busy(1)
+                    self.oe.execute(self.TORRSRV_GET_SRC + ' install', 0)
+                    self.oe.dbg_log('ace::get_torrsrv_source', 'exit_function', 0)
+                    return 'OK'
+            self.oe.dbg_log('ace::get_torrsrv_source', 'exit_function', 0)
+            return 'ERROR'
+        except Exception, e:
+            self.oe.dbg_log('ace::get_torrsrv_source', 'ERROR: (%s)' % repr(e), 4)
+
     def exit(self):
         try:
             self.oe.dbg_log('ace::exit', 'enter_function', 0)
